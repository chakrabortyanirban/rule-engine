name: Build And Deploy
env:
  REPO_NAME_PRE_EXT: chakrabortyanirban/ruleengine
  REPO_NAME: ruleengine
  DOCKER_REG: ${{ secrets.DOCKER_HUB_USERNAME }}

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.*

      - name: caching nugets
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('src/**/**.csproj') }}

      - name: build
        run: dotnet build -c Release ./src/RuleEngine.sln

      - name: test
        run: dotnet test --no-build -c Release ./src/RuleEngine.sln

  release:
    runs-on: ubuntu-latest
    needs: ["build"]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: "Git: Checkout main with full history"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Git: Configure local settings"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: "Setup: Calculate next version number"
        uses: mathieudutour/github-tag-action@981ffb2cc3f2b684b2bfd8ee17bc8d781368ba60
        id: version
        with:
          tag_prefix: ""
          dry_run: true
          default_bump: patch
          github_token: ${{ secrets.REPO_TOKEN }}

      - name: Echo version
        run: echo ${{ steps.version.outputs.new_version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag image and push it to Repo
        env:
          DOCKER_TAG: ${{ env.REPO_NAME }}:${{ steps.version.outputs.new_version }}
        run: |
          echo Building docker image ${DOCKER_TAG}
          docker build -t ${DOCKER_TAG} .
          echo tagging docker image
          docker tag ${DOCKER_TAG} ${{ env.DOCKER_REG }}/${DOCKER_TAG}
          echo pushing to docker hub
          docker push ${{ env.DOCKER_REG }}/${DOCKER_TAG}
